{"version":3,"sources":["../../components/table/src/addon/filter-trigger.component.ts","../../components/table/src/addon/filter.component.ts","../../components/table/src/addon/row-expand-button.directive.ts","../../components/table/src/addon/row-indent.directive.ts","../../components/table/src/addon/selection.component.ts","../../components/table/src/addon/sorters.component.ts","../../components/table/src/cell/cell-fixed.directive.ts","../../node_modules/tslib/tslib.es6.js","../../components/table/src/table-style.service.ts","../../components/table/src/cell/cell.directive.ts","../../components/table/src/cell/td-addon.component.ts","../../components/table/src/cell/th-addon.component.ts","../../components/table/src/cell/th-measure.directive.ts","../../components/table/src/cell/th-selection.component.ts","../../components/table/src/styled/align.directive.ts","../../components/table/src/styled/ellipsis.directive.ts","../../components/table/src/styled/word-break.directive.ts","../../components/table/src/table/table-content.component.ts","../../components/table/src/table/table-fixed-row.component.ts","../../components/table/src/table/table-inner-default.component.ts","../../components/table/src/table/table-inner-scroll.component.ts","../../components/table/src/table/table-virtual-scroll.directive.ts","../../components/table/src/table-data.service.ts","../../components/table/src/table/table.component.ts","../../components/table/src/table/tbody.component.ts","../../components/table/src/table/tr.directive.ts","../../components/table/src/table/thead.component.ts","../../components/table/src/table/title-footer.component.ts","../../components/table/src/table/tr-expand.directive.ts","../../components/table/src/table/tr-measure.component.ts","../../components/table/src/table.module.ts"],"names":["NzFilterTriggerComponent","cdr","this","nzActive","nzVisible","nzVisibleChange","EventEmitter","prototype","onVisibleChange","visible","next","onFilterClick","$event","stopPropagation","hide","markForCheck","show","Component","args","selector","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","encapsulation","ViewEncapsulation","None","template","host","[class.ant-table-filter-trigger-container]","[class.ant-table-filter-trigger-container-open]","ChangeDetectorRef","Input","Output","NzTableFilterComponent","i18n","contentTemplate","customFilter","extraTemplate","filterMultiple","listOfFilter","filterChange","destroy$","Subject","isChanged","isChecked","isVisible","listOfParsedFilter","trackByValue","_","item","value","check","filter","map","Object","assign","checked","getCheckedStatus","confirm","emitFilterData","reset","parseListOfFilter","listOfChecked","emit","length","byDefault","text","some","ngOnInit","_this","localeChange","pipe","takeUntil","subscribe","locale","getLocaleData","ngOnChanges","changes","ngOnDestroy","complete","[class.ant-table-filter-column]","NzI18nService","NzRowExpandButtonDirective","expand","spaceMode","expandChange","onHostClick","Directive","[type]","[class.ant-table-row-expand-icon]","[class.ant-table-row-expand-icon-expanded]","[class.ant-table-row-expand-icon-collapsed]","[class.ant-table-row-expand-icon-spaced]","(click)","indentSize","[class.ant-table-row-indent]","[style.padding-left.px]","NzTableSelectionComponent","listOfSelections","disabled","indeterminate","showCheckbox","showRowSelection","checkedChange","onCheckedChange","[class.ant-table-selection]","NzTableSortersComponent","sortDirections","sortOrder","isUp","isDown","indexOf","[class.ant-table-column-sorters]","NzCellFixedDirective","renderer","elementRef","nzRight","nzLeft","colspan","colSpan","changes$","isAutoLeft","isAutoRight","isFixedLeft","isFixedRight","isFixed","setAutoLeftWidth","autoLeft","setStyle","nativeElement","setAutoRightWidth","autoRight","setIsFirstRight","isFirstRight","setFixClass","setIsLastLeft","isLastLeft","flag","className","removeClass","addClass","validatePx","[class.ant-table-cell-fix-right]","[class.ant-table-cell-fix-left]","[style.position]","Renderer2","ElementRef","__decorate","decorators","target","key","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","__values","o","s","Symbol","iterator","m","call","done","TypeError","__read","n","e","ar","push","error","__spread","concat","NzTableStyleService","theadTemplate$","ReplaySubject","hasFixLeft$","hasFixRight$","hostWidth$","columnCount$","showEmpty$","noResult$","listOfThWidthConfigPx$","BehaviorSubject","tableWidthConfigPx$","manualWidthConfigPx$","combineLatest","_a","_b","widthConfig","listOfWidth","listOfAutoWidthPx$","listOfListOfThWidthPx$","merge","autoWidth","manualWidth","width","index","listOfMeasureColumn$","listOfListOfThWidth$","list","parseInt","enableAutoMeasure$","setTheadTemplate","setHasFixLeft","hasFixLeft","setHasFixRight","hasFixRight","setTableWidthConfig","setListOfTh","listOfTh","columnCount","forEach","th","listOfThPx","nzWidth","setListOfMeasureColumn","listOfKeys","setListOfAutoWidth","listOfAutoWidth","setShowEmpty","showEmpty","setNoResult","noResult","setScroll","scrollX","scrollY","enableAutoMeasure","Injectable","nzTableStyleService","isInsideTable","[class.ant-table-cell]","type","Optional","NzTdAddOnComponent","nzChecked","nzDisabled","nzIndeterminate","nzIndentSize","nzShowExpand","nzShowCheckbox","nzExpand","nzCheckedChange","nzExpandChange","isNzShowExpandChanged","isNzShowCheckboxChanged","onExpandChange","isFirstChange","firstChange","undefined","currentValue","[class.ant-table-cell-with-append]","[class.ant-table-selection-column]","InputBoolean","NzThAddOnComponent","manualClickOrder$","calcOperatorChange$","nzFilterValue","sortOrderChange$","isNzShowSortChanged","isNzShowFilterChanged","nzFilterMultiple","nzSortOrder","nzSortPriority","nzSortDirections","nzFilters","nzSortFn","nzFilterFn","nzShowSort","nzShowFilter","nzCustomFilter","nzSortOrderChange","nzFilterChange","getNextSortDirection","current","emitNextSortValue","nextOrder","setSortOrder","order","clearSortOrder","onFilterValueChange","updateCalcOperator","listOfValue","[class.ant-table-column-has-sorters]","[class.ant-table-column-sort]","NzThMeasureDirective","rowspan","rowSpan","col","isNil","removeAttribute","setAttribute","row","NzThSelectionComponent","nzSelections","nzShowRowSelection","nzAlign","[style.text-align]","nzEllipsis","[class.ant-table-cell-ellipsis]","nzBreakWord","[style.word-break]","tableLayout","theadTemplate","listOfColWidth","[style.table-layout]","[class.ant-table-fixed]","[style.width]","[style.min-width]","NzTableFixedRowComponent","ngAfterViewInit","count","tdElement","ViewChild","[class.ant-table-container]","NzTableInnerScrollComponent","ngZone","platform","resizeService","data","virtualTemplate","virtualItemSize","virtualMaxBufferPx","virtualMinBufferPx","virtualForTrackBy","headerStyleMap","bodyStyleMap","verticalScrollBarWidth","noDateVirtualHeight","data$","scroll$","setScrollPositionClassName","clear","tableBodyElement","scrollWidth","scrollLeft","clientWidth","leftClassName","rightClassName","tableMainElement","hasVerticalScrollBar","overflowX","overflowY","maxHeight","isBrowser","runOutsideAngular","scrollEvent$","startWith","delay","switchMap","fromEvent","resize$","tableHeaderElement","NgZone","Platform","NzResizeService","read","CdkVirtualScrollViewport","templateRef","TemplateRef","NzTableDataService","pageIndex$","frontPagination$","pageSize$","listOfData$","pageIndexDistinct$","distinctUntilChanged","pageSizeDistinct$","listOfCalcOperator$","queryParams$","debounceTime","skip","pageIndex","pageSize","listOfCalc","sort","sortFn","filterFn","filterValue","listOfDataAfterCalc$","_c","listOfData","listOfCalcOperator","listOfDataAfterCalc","listOfFilterOperator","Array","isArray","listOfFilterOperator_1","listOfFilterOperator_1_1","listOfSortOperator","a","b","sortPriority","record1","record2","listOfSortOperator_1","listOfSortOperator_1_1","compareResult","listOfFrontEndCurrentPageData$","Math","ceil","slice","listOfCurrentPageData$","pagination","total$","updatePageSize","size","updateFrontPagination","updatePageIndex","updateListOfData","NZ_CONFIG_MODULE_NAME","NzTableComponent","nzResizeObserver","nzConfigService","nzTableDataService","_nzModuleName","nzTableLayout","nzShowTotal","nzItemRender","nzTitle","nzFooter","nzNoResult","nzPageSizeOptions","nzVirtualItemSize","nzVirtualMaxBufferPx","nzVirtualMinBufferPx","nzVirtualForTrackBy","nzLoadingDelay","nzPageIndex","nzPageSize","nzTotal","nzWidthConfig","nzData","nzPaginationPosition","nzScroll","x","y","nzFrontPagination","nzTemplateMode","nzShowPagination","nzLoading","nzOuterBordered","nzLoadingIndicator","nzBordered","nzSize","nzShowSizeChanger","nzHideOnSinglePage","nzShowQuickJumper","nzSimple","nzPageSizeChange","nzPageIndexChange","nzQueryParams","nzCurrentPageDataChange","listOfAutoColWidth","listOfManualColWidth","loading$","templateMode$","getConfigChangeEventForComponent","onPageSizeChange","onPageIndexChange","total","loading","templateMode","empty","measureScrollbar","observe","getBoundingClientRect","scrollBarWidth","floor","nzTableInnerScrollComponent","cdkVirtualScrollViewport","providers","[class.ant-table-wrapper]","NzResizeObserver","NzConfigService","ContentChild","NzTableVirtualScrollDirective","static","WithConfig","NzTbodyComponent","onListOfAutoWidthChange","[class.ant-table-tbody]","NzTrDirective","listOfFixedColumns$","listOfColumns$","listOfFixedColumnsChanges$","apply","flatMap","listOfFixedLeftColumnChanges$","listOfFixedRightColumnChanges$","listOfColumnsChanges$","ngAfterContentInit","listOfCellFixedDirective","listOfNzThDirective","listOfFixedLeft","cell","listOfFixedRight","listOfLeftCell","reduce","pre","cur","listOfRightCell","[class.ant-table-row]","ContentChildren","NzTheadComponent","firstTableRow$","listOfNzTrDirective","first","listOfColumnsChanges$_1","firstTableRow","EMPTY","enable","of","firstTr","listOfFixedLeftColumn","listOfFixedRightColumn","listOfColumn$_1","listOfNzThAddOnComponent","emitValue","nzColumnKey","mergeMap","removeChild","parentNode","descendants","title","footer","[class.ant-table-title]","[class.ant-table-footer]","[class.ant-table-expanded-row]","[hidden]","NzTrMeasureComponent","listOfMeasureColumn","trackByFunc","listOfTdElement","toArray","run","[class.ant-table-measure-now]","ViewChildren","NgModule","declarations","NzTableCellDirective","NzTrExpandDirective","NzTableContentComponent","NzTableTitleFooterComponent","NzTableInnerDefaultComponent","NzRowIndentDirective","NzCellBreakWordDirective","NzCellAlignDirective","NzCellEllipsisDirective","exports","imports","NzMenuModule","FormsModule","NzOutletModule","NzRadioModule","NzCheckboxModule","NzDropDownModule","NzButtonModule","CommonModule","PlatformModule","NzPaginationModule","NzResizeObserversModule","NzSpinModule","NzI18nModule","NzIconModule","NzEmptyModule","ScrollingModule"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\n\n@Component({\n  selector: 'nz-filter-trigger',\n  exportAs: `nzFilterTrigger`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n      (click)=\"onFilterClick($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  `,\n  host: {\n    '[class.ant-table-filter-trigger-container]': 'true',\n    '[class.ant-table-filter-trigger-container-open]': 'nzVisible'\n  }\n})\nexport class NzFilterTriggerComponent {\n  @Input() nzActive = false;\n  @Input() nzDropdownMenu!: NzDropdownMenuComponent;\n  @Input() nzVisible = false;\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n  onVisibleChange(visible: boolean): void {\n    this.nzVisible = visible;\n    this.nzVisibleChange.next(visible);\n  }\n  onFilterClick($event: MouseEvent): void {\n    $event.stopPropagation();\n  }\n  hide(): void {\n    this.nzVisible = false;\n    this.cdr.markForCheck();\n  }\n  show(): void {\n    this.nzVisible = true;\n    this.cdr.markForCheck();\n  }\n  constructor(private cdr: ChangeDetectorRef) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService, NzTableI18nInterface } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterList } from '../table.types';\n\ninterface NzThItemInterface {\n  text: string;\n  value: NzSafeAny;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'nz-table-filter',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span class=\"ant-table-filter-column-title\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </span>\n    <ng-container *ngIf=\"!customFilter; else extraTemplate\">\n      <nz-filter-trigger\n        [nzVisible]=\"isVisible\"\n        [nzActive]=\"isChecked\"\n        [nzDropdownMenu]=\"filterMenu\"\n        (nzVisibleChange)=\"onVisibleChange($event)\"\n      >\n        <i nz-icon nzType=\"filter\" nzTheme=\"fill\"></i>\n      </nz-filter-trigger>\n      <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n        <div class=\"ant-table-filter-dropdown\">\n          <ul nz-menu>\n            <li nz-menu-item [nzSelected]=\"f.checked\" *ngFor=\"let f of listOfParsedFilter; trackBy: trackByValue\" (click)=\"check(f)\">\n              <label nz-radio *ngIf=\"!filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <label nz-checkbox *ngIf=\"filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <span>{{ f.text }}</span>\n            </li>\n          </ul>\n          <div class=\"ant-table-filter-dropdown-btns\">\n            <button nz-button nzType=\"link\" nzSize=\"small\" (click)=\"reset()\" [disabled]=\"!isChecked\">{{ locale.filterReset }}</button>\n            <button nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"confirm()\">{{ locale.filterConfirm }}</button>\n          </div>\n        </div>\n      </nz-dropdown-menu>\n    </ng-container>\n  `,\n  host: {\n    '[class.ant-table-filter-column]': 'true'\n  }\n})\nexport class NzTableFilterComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() customFilter = false;\n  @Input() extraTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() filterMultiple = true;\n  @Input() listOfFilter: NzTableFilterList = [];\n  @Output() readonly filterChange = new EventEmitter<NzSafeAny[] | NzSafeAny>();\n  private destroy$ = new Subject();\n  locale!: NzTableI18nInterface;\n  isChanged = false;\n  isChecked = false;\n  isVisible = false;\n  listOfParsedFilter: NzThItemInterface[] = [];\n\n  trackByValue(_: number, item: NzThItemInterface): NzSafeAny {\n    return item.value;\n  }\n\n  check(filter: NzThItemInterface): void {\n    this.isChanged = true;\n    if (this.filterMultiple) {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        if (item === filter) {\n          return { ...item, checked: !filter.checked };\n        } else {\n          return item;\n        }\n      });\n      filter.checked = !filter.checked;\n    } else {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        return { ...item, checked: item === filter };\n      });\n    }\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n  }\n\n  confirm(): void {\n    this.isVisible = false;\n    this.emitFilterData();\n  }\n\n  reset(): void {\n    this.isChanged = true;\n    this.isVisible = false;\n    this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    this.emitFilterData();\n  }\n\n  onVisibleChange(value: boolean): void {\n    this.isVisible = value;\n    if (!value) {\n      this.emitFilterData();\n    }\n  }\n\n  emitFilterData(): void {\n    if (this.isChanged) {\n      const listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n      if (this.filterMultiple) {\n        this.filterChange.emit(listOfChecked);\n      } else {\n        this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n      }\n      this.isChanged = false;\n    }\n  }\n\n  parseListOfFilter(listOfFilter: NzTableFilterList, reset?: boolean): NzThItemInterface[] {\n    return listOfFilter.map(item => {\n      const checked = reset ? false : !!item.byDefault;\n      return { text: item.text, value: item.value, checked };\n    });\n  }\n\n  getCheckedStatus(listOfParsedFilter: NzThItemInterface[]): boolean {\n    return listOfParsedFilter.some(item => item.checked);\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private i18n: NzI18nService) {}\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Table');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { listOfFilter } = changes;\n    if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n      this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: 'button[nz-row-expand-button]',\n  host: {\n    '[type]': `'button'`,\n    '[class.ant-table-row-expand-icon]': 'true',\n    '[class.ant-table-row-expand-icon-expanded]': `!spaceMode && expand === true`,\n    '[class.ant-table-row-expand-icon-collapsed]': `!spaceMode && expand === false`,\n    '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',\n    '(click)': 'onHostClick()'\n  }\n})\nexport class NzRowExpandButtonDirective {\n  @Input() expand = false;\n  @Input() spaceMode = false;\n  @Output() readonly expandChange = new EventEmitter();\n  onHostClick(): void {\n    if (!this.spaceMode) {\n      this.expand = !this.expand;\n      this.expandChange.next(this.expand);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'nz-row-indent',\n  host: {\n    '[class.ant-table-row-indent]': 'true',\n    '[style.padding-left.px]': 'indentSize'\n  }\n})\nexport class NzRowIndentDirective {\n  @Input() indentSize = 0;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-selection',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      *ngIf=\"showCheckbox\"\n      nz-checkbox\n      [class.ant-table-selection-select-all-custom]=\"showRowSelection\"\n      [ngModel]=\"checked\"\n      [nzDisabled]=\"disabled\"\n      [nzIndeterminate]=\"indeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    >\n    </label>\n    <div class=\"ant-table-selection-extra\" *ngIf=\"showRowSelection\">\n      <span nz-dropdown class=\"ant-table-selection-down\" nzPlacement=\"bottomLeft\" [nzDropdownMenu]=\"selectionMenu\">\n        <i nz-icon nzType=\"down\"></i>\n      </span>\n      <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n        <ul nz-menu class=\"ant-table-selection-menu\">\n          <li nz-menu-item *ngFor=\"let selection of listOfSelections\" (click)=\"selection.onSelect()\">\n            {{ selection.text }}\n          </li>\n        </ul>\n      </nz-dropdown-menu>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-selection]': 'true'\n  }\n})\nexport class NzTableSelectionComponent {\n  @Input() listOfSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() indeterminate = false;\n  @Input() showCheckbox = false;\n  @Input() showRowSelection = false;\n  @Output() readonly checkedChange = new EventEmitter<boolean>();\n  onCheckedChange(checked: boolean): void {\n    this.checked = checked;\n    this.checkedChange.emit(checked);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector: 'nz-table-sorters',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span><ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template></span>\n    <span class=\"ant-table-column-sorter\" [class.ant-table-column-sorter-full]=\"isDown && isUp\">\n      <span class=\"ant-table-column-sorter-inner\">\n        <i nz-icon nzType=\"caret-up\" *ngIf=\"isUp\" class=\"ant-table-column-sorter-up\" [class.active]=\"sortOrder == 'ascend'\"></i>\n        <i nz-icon nzType=\"caret-down\" *ngIf=\"isDown\" class=\"ant-table-column-sorter-down\" [class.active]=\"sortOrder == 'descend'\"></i>\n      </span>\n    </span>\n  `,\n  host: {\n    '[class.ant-table-column-sorters]': 'true'\n  }\n})\nexport class NzTableSortersComponent implements OnChanges {\n  @Input() sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() sortOrder: NzTableSortOrder = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  isUp = false;\n  isDown = false;\n  ngOnChanges(changes: SimpleChanges): void {\n    const { sortDirections } = changes;\n    if (sortDirections) {\n      this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n      this.isDown = this.sortDirections.indexOf('descend') !== -1;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]',\n  host: {\n    '[class.ant-table-cell-fix-right]': `isFixedRight`,\n    '[class.ant-table-cell-fix-left]': `isFixedLeft`,\n    '[style.position]': `isFixed? 'sticky' : null`\n  }\n})\nexport class NzCellFixedDirective implements OnChanges {\n  @Input() nzRight: string | boolean = false;\n  @Input() nzLeft: string | boolean = false;\n  @Input() colspan: number | null = null;\n  @Input() colSpan: number | null = null;\n  changes$ = new Subject<void>();\n  isAutoLeft = false;\n  isAutoRight = false;\n  isFixedLeft = false;\n  isFixedRight = false;\n  isFixed = false;\n\n  setAutoLeftWidth(autoLeft: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n  }\n\n  setAutoRightWidth(autoRight: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n  }\n\n  setIsFirstRight(isFirstRight: boolean): void {\n    this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n  }\n\n  setIsLastLeft(isLastLeft: boolean): void {\n    this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n  }\n\n  private setFixClass(flag: boolean, className: string): void {\n    // the setFixClass function may call many times, so remove it first.\n    this.renderer.removeClass(this.elementRef.nativeElement, className);\n\n    if (flag) {\n      this.renderer.addClass(this.elementRef.nativeElement, className);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnChanges(): void {\n    this.setIsFirstRight(false);\n    this.setIsLastLeft(false);\n    this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n    this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n    this.isFixedLeft = this.nzLeft !== false;\n    this.isFixedRight = this.nzRight !== false;\n    this.isFixed = this.isFixedLeft || this.isFixedRight;\n    const validatePx = (value: string | boolean): string | null => {\n      if (typeof value === 'string' && value !== '') {\n        return value;\n      } else {\n        return null;\n      }\n    };\n    this.setAutoLeftWidth(validatePx(this.nzLeft));\n    this.setAutoRightWidth(validatePx(this.nzRight));\n    this.changes$.next();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, combineLatest, merge, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\n\n@Injectable()\nexport class NzTableStyleService {\n  theadTemplate$ = new ReplaySubject<TemplateRef<NzSafeAny>>(1);\n  hasFixLeft$ = new ReplaySubject<boolean>(1);\n  hasFixRight$ = new ReplaySubject<boolean>(1);\n  hostWidth$ = new ReplaySubject<number>(1);\n  columnCount$ = new ReplaySubject<number>(1);\n  showEmpty$ = new ReplaySubject<boolean>(1);\n  noResult$ = new ReplaySubject<string | TemplateRef<NzSafeAny> | undefined>(1);\n  private listOfThWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  private tableWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(\n    map(([widthConfig, listOfWidth]) => (widthConfig.length ? widthConfig : listOfWidth))\n  );\n  private listOfAutoWidthPx$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidthPx$ = merge(\n    /** init with manual width **/\n    this.manualWidthConfigPx$,\n    combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(\n      map(([autoWidth, manualWidth]) => {\n        /** use autoWidth until column length match **/\n        if (autoWidth.length === manualWidth.length) {\n          return autoWidth.map((width, index) => {\n            if (width === '0px') {\n              return manualWidth[index] || null;\n            } else {\n              return manualWidth[index] || width;\n            }\n          });\n        } else {\n          return manualWidth;\n        }\n      })\n    )\n  );\n  listOfMeasureColumn$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(list => list.map(width => parseInt(width, 10))));\n  enableAutoMeasure$ = new ReplaySubject<boolean>(1);\n\n  setTheadTemplate(template: TemplateRef<NzSafeAny>): void {\n    this.theadTemplate$.next(template);\n  }\n\n  setHasFixLeft(hasFixLeft: boolean): void {\n    this.hasFixLeft$.next(hasFixLeft);\n  }\n\n  setHasFixRight(hasFixRight: boolean): void {\n    this.hasFixRight$.next(hasFixRight);\n  }\n\n  setTableWidthConfig(widthConfig: Array<string | null>): void {\n    this.tableWidthConfigPx$.next(widthConfig);\n  }\n\n  setListOfTh(listOfTh: NzThMeasureDirective[]): void {\n    let columnCount = 0;\n    listOfTh.forEach(th => {\n      columnCount += (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n    });\n    const listOfThPx = listOfTh.map(item => item.nzWidth);\n    this.columnCount$.next(columnCount);\n    this.listOfThWidthConfigPx$.next(listOfThPx);\n  }\n\n  setListOfMeasureColumn(listOfTh: NzThMeasureDirective[]): void {\n    const listOfKeys: string[] = [];\n    listOfTh.forEach(th => {\n      const length = (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n      for (let i = 0; i < length; i++) {\n        listOfKeys.push(`measure_key_${i}`);\n      }\n    });\n    this.listOfMeasureColumn$.next(listOfKeys);\n  }\n\n  setListOfAutoWidth(listOfAutoWidth: number[]): void {\n    this.listOfAutoWidthPx$.next(listOfAutoWidth.map(width => `${width}px`));\n  }\n\n  setShowEmpty(showEmpty: boolean): void {\n    this.showEmpty$.next(showEmpty);\n  }\n\n  setNoResult(noResult: string | TemplateRef<NzSafeAny> | undefined): void {\n    this.noResult$.next(noResult);\n  }\n\n  setScroll(scrollX: string | null, scrollY: string | null): void {\n    const enableAutoMeasure = !!(scrollX || scrollY);\n    if (!enableAutoMeasure) {\n      this.setListOfAutoWidth([]);\n    }\n    this.enableAutoMeasure$.next(enableAutoMeasure);\n  }\n\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, Optional } from '@angular/core';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])',\n  host: {\n    '[class.ant-table-cell]': 'isInsideTable'\n  }\n})\nexport class NzTableCellDirective {\n  isInsideTable = false;\n  constructor(@Optional() nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"nzShowExpand || nzIndentSize > 0\">\n      <nz-row-indent [indentSize]=\"nzIndentSize\"></nz-row-indent>\n      <button nz-row-expand-button [expand]=\"nzExpand\" (expandChange)=\"onExpandChange($event)\" [spaceMode]=\"!nzShowExpand\"></button>\n    </ng-container>\n    <label\n      nz-checkbox\n      *ngIf=\"nzShowCheckbox\"\n      [nzDisabled]=\"nzDisabled\"\n      [ngModel]=\"nzChecked\"\n      [nzIndeterminate]=\"nzIndeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    >\n    </label>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-table-cell-with-append]': `nzShowExpand || nzIndentSize > 0`,\n    '[class.ant-table-selection-column]': `nzShowCheckbox`\n  }\n})\nexport class NzTdAddOnComponent implements OnChanges {\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzExpand: BooleanInput;\n\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() nzIndentSize = 0;\n  @Input() @InputBoolean() nzShowExpand = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzExpand = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzExpandChange = new EventEmitter<boolean>();\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  onExpandChange(expand: boolean): void {\n    this.nzExpand = expand;\n    this.nzExpandChange.emit(expand);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzExpand, nzChecked, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n      this.nzShowExpand = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterFn, NzTableFilterList, NzTableFilterValue, NzTableSortFn, NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector: 'th[nzColumnKey], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-filter\n      *ngIf=\"nzShowFilter || nzCustomFilter; else notFilterTemplate\"\n      [contentTemplate]=\"notFilterTemplate\"\n      [extraTemplate]=\"extraTemplate\"\n      [customFilter]=\"nzCustomFilter\"\n      [filterMultiple]=\"nzFilterMultiple\"\n      [listOfFilter]=\"nzFilters\"\n      (filterChange)=\"onFilterValueChange($event)\"\n    ></nz-table-filter>\n    <ng-template #notFilterTemplate>\n      <ng-template [ngTemplateOutlet]=\"nzShowSort ? sortTemplate : contentTemplate\"></ng-template>\n    </ng-template>\n    <ng-template #extraTemplate>\n      <ng-content select=\"[nz-th-extra]\"></ng-content>\n      <ng-content select=\"nz-filter-trigger\"></ng-content>\n    </ng-template>\n    <ng-template #sortTemplate>\n      <nz-table-sorters [sortOrder]=\"sortOrder\" [sortDirections]=\"sortDirections\" [contentTemplate]=\"contentTemplate\"></nz-table-sorters>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-table-column-has-sorters]': 'nzShowSort',\n    '[class.ant-table-column-sort]': `sortOrder === 'descend' || sortOrder === 'ascend'`,\n    '(click)': 'emitNextSortValue()'\n  }\n})\nexport class NzThAddOnComponent implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzShowSort: BooleanInput;\n  static ngAcceptInputType_nzShowFilter: BooleanInput;\n  static ngAcceptInputType_nzCustomFilter: BooleanInput;\n\n  manualClickOrder$ = new Subject<NzThAddOnComponent>();\n  calcOperatorChange$ = new Subject();\n  nzFilterValue: NzTableFilterValue = null;\n  sortOrder: NzTableSortOrder = null;\n  sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  private sortOrderChange$ = new Subject<NzTableSortOrder>();\n  private destroy$ = new Subject();\n  private isNzShowSortChanged = false;\n  private isNzShowFilterChanged = false;\n  @Input() nzColumnKey?: string;\n  @Input() nzFilterMultiple = true;\n  @Input() nzSortOrder: NzTableSortOrder = null;\n  @Input() nzSortPriority: number | boolean = false;\n  @Input() nzSortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() nzFilters: NzTableFilterList = [];\n  @Input() nzSortFn: NzTableSortFn | boolean | null = null;\n  @Input() nzFilterFn: NzTableFilterFn | boolean | null = null;\n  @Input() @InputBoolean() nzShowSort = false;\n  @Input() @InputBoolean() nzShowFilter = false;\n  @Input() @InputBoolean() nzCustomFilter = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzSortOrderChange = new EventEmitter<string | null>();\n  @Output() readonly nzFilterChange = new EventEmitter<NzTableFilterValue>();\n\n  getNextSortDirection(sortDirections: NzTableSortOrder[], current: NzTableSortOrder): NzTableSortOrder {\n    const index = sortDirections.indexOf(current);\n    if (index === sortDirections.length - 1) {\n      return sortDirections[0];\n    } else {\n      return sortDirections[index + 1];\n    }\n  }\n\n  emitNextSortValue(): void {\n    if (this.nzShowSort) {\n      const nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder!);\n      this.setSortOrder(nextOrder);\n      this.manualClickOrder$.next(this);\n    }\n  }\n\n  setSortOrder(order: NzTableSortOrder): void {\n    this.sortOrderChange$.next(order);\n  }\n\n  clearSortOrder(): void {\n    if (this.sortOrder !== null) {\n      this.setSortOrder(null);\n    }\n  }\n\n  onFilterValueChange(value: NzTableFilterValue): void {\n    this.nzFilterChange.emit(value);\n    this.nzFilterValue = value;\n    this.updateCalcOperator();\n  }\n\n  updateCalcOperator(): void {\n    this.calcOperatorChange$.next();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n      if (this.sortOrder !== order) {\n        this.sortOrder = order;\n        this.nzSortOrderChange.emit(order);\n      }\n      this.updateCalcOperator();\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      nzSortDirections,\n      nzFilters,\n      nzSortOrder,\n      nzSortFn,\n      nzFilterFn,\n      nzSortPriority,\n      nzFilterMultiple,\n      nzShowSort,\n      nzShowFilter\n    } = changes;\n    if (nzSortDirections) {\n      if (this.nzSortDirections && this.nzSortDirections.length) {\n        this.sortDirections = this.nzSortDirections;\n      }\n    }\n    if (nzSortOrder) {\n      this.sortOrder = this.nzSortOrder;\n      this.setSortOrder(this.nzSortOrder);\n    }\n    if (nzShowSort) {\n      this.isNzShowSortChanged = true;\n    }\n    if (nzShowFilter) {\n      this.isNzShowFilterChanged = true;\n    }\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    if ((isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) && !this.isNzShowSortChanged) {\n      this.nzShowSort = true;\n    }\n    if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n      this.nzShowFilter = true;\n    }\n    if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n      const listOfValue = this.nzFilters.filter(item => item.byDefault).map(item => item.value);\n      this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n    }\n    if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n      this.updateCalcOperator();\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\nimport { isNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'th'\n})\nexport class NzThMeasureDirective implements OnChanges {\n  changes$ = new Subject();\n  @Input() nzWidth: string | null = null;\n  @Input() colspan: string | number | null = null;\n  @Input() colSpan: string | number | null = null;\n  @Input() rowspan: string | number | null = null;\n  @Input() rowSpan: string | number | null = null;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzWidth, colspan, rowspan, colSpan, rowSpan } = changes;\n    if (colspan || colSpan) {\n      const col = this.colspan || this.colSpan;\n      if (!isNil(col)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', `${col}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n      }\n    }\n    if (rowspan || rowSpan) {\n      const row = this.rowspan || this.rowSpan;\n      if (!isNil(row)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', `${row}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n      }\n    }\n    if (nzWidth || colspan) {\n      this.changes$.next();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-selection\n      [checked]=\"nzChecked\"\n      [disabled]=\"nzDisabled\"\n      [indeterminate]=\"nzIndeterminate\"\n      [listOfSelections]=\"nzSelections\"\n      [showCheckbox]=\"nzShowCheckbox\"\n      [showRowSelection]=\"nzShowRowSelection\"\n      (checkedChange)=\"onCheckedChange($event)\"\n    ></nz-table-selection>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-table-selection-column]': 'true'\n  }\n})\nexport class NzThSelectionComponent implements OnChanges {\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzShowRowSelection: BooleanInput;\n\n  @Input() nzSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzShowRowSelection = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzChecked, nzSelections, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n      this.nzShowRowSelection = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'th[nzAlign],td[nzAlign]',\n  host: {\n    '[style.text-align]': 'nzAlign'\n  }\n})\nexport class NzCellAlignDirective {\n  @Input() nzAlign: 'left' | 'right' | 'center' | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzEllipsis],td[nzEllipsis]',\n  host: {\n    '[class.ant-table-cell-ellipsis]': 'nzEllipsis'\n  }\n})\nexport class NzCellEllipsisDirective {\n  static ngAcceptInputType_nzEllipsis: BooleanInput;\n\n  @Input() @InputBoolean() nzEllipsis = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzBreakWord],td[nzBreakWord]',\n  host: {\n    '[style.word-break]': `nzBreakWord ? 'break-all' : ''`\n  }\n})\nexport class NzCellBreakWordDirective {\n  static ngAcceptInputType_nzBreakWord: BooleanInput;\n\n  @Input() @InputBoolean() nzBreakWord = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'table[nz-table-content]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <col [style.width]=\"width\" [style.minWidth]=\"width\" *ngFor=\"let width of listOfColWidth\" />\n    <thead class=\"ant-table-thead\" *ngIf=\"theadTemplate\">\n      <ng-template [ngTemplateOutlet]=\"theadTemplate\"></ng-template>\n    </thead>\n    <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[style.table-layout]': 'tableLayout',\n    '[class.ant-table-fixed]': 'scrollX',\n    '[style.width]': 'scrollX',\n    '[style.min-width]': `scrollX ? '100%': null`\n  }\n})\nexport class NzTableContentComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() scrollX: string | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tr[nz-table-fixed-row], tr[nzExpand]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td class=\"nz-disable-td ant-table-cell\" #tdElement>\n      <div\n        class=\"ant-table-expanded-row-fixed\"\n        *ngIf=\"enableAutoMeasure$ | async; else contentTemplate\"\n        style=\"position: sticky; left: 0px; overflow: hidden;\"\n        [style.width.px]=\"hostWidth$ | async\"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      </div>\n    </td>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `\n})\nexport class NzTableFixedRowComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('tdElement') tdElement!: ElementRef;\n  hostWidth$ = new BehaviorSubject<number | null>(null);\n  enableAutoMeasure$ = new BehaviorSubject<boolean>(false);\n  private destroy$ = new Subject();\n  constructor(private nzTableStyleService: NzTableStyleService, private renderer: Renderer2) {}\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      const { enableAutoMeasure$, hostWidth$ } = this.nzTableStyleService;\n      enableAutoMeasure$.subscribe(this.enableAutoMeasure$);\n      hostWidth$.subscribe(this.hostWidth$);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(count => {\n      this.renderer.setAttribute(this.tdElement.nativeElement, 'colspan', `${count}`);\n    });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-default',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"ant-table-content\">\n      <table\n        nz-table-content\n        [contentTemplate]=\"contentTemplate\"\n        [tableLayout]=\"tableLayout\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n      ></table>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-container]': 'true'\n  }\n})\nexport class NzTableInnerDefaultComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { delay, filter, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzTableData } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-scroll',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"scrollY\">\n      <div #tableHeaderElement [ngStyle]=\"headerStyleMap\" class=\"ant-table-header nz-table-hide-scrollbar\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n        ></table>\n      </div>\n      <div #tableBodyElement *ngIf=\"!virtualTemplate\" class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n      <cdk-virtual-scroll-viewport\n        #tableBodyElement\n        *ngIf=\"virtualTemplate\"\n        [itemSize]=\"virtualItemSize\"\n        [maxBufferPx]=\"virtualMaxBufferPx\"\n        [minBufferPx]=\"virtualMinBufferPx\"\n        [style.height]=\"data.length ? scrollY : noDateVirtualHeight\"\n      >\n        <table nz-table-content tableLayout=\"fixed\" [scrollX]=\"scrollX\" [listOfColWidth]=\"listOfColWidth\">\n          <tbody>\n            <ng-container *cdkVirtualFor=\"let item of data; let i = index; trackBy: virtualForTrackBy\">\n              <ng-template [ngTemplateOutlet]=\"virtualTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, index: i }\"></ng-template>\n            </ng-container>\n          </tbody>\n        </table>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"ant-table-content\" *ngIf=\"!scrollY\">\n      <div #tableBodyElement class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-container]': 'true'\n  }\n})\nexport class NzTableInnerScrollComponent implements OnChanges, AfterViewInit, OnDestroy {\n  @Input() data: NzTableData[] = [];\n  @Input() scrollX: string | null = null;\n  @Input() scrollY: string | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() widthConfig: string[] = [];\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualItemSize = 0;\n  @Input() virtualMaxBufferPx = 200;\n  @Input() virtualMinBufferPx = 100;\n  @Input() tableMainElement?: HTMLDivElement;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @ViewChild('tableHeaderElement', { read: ElementRef }) tableHeaderElement!: ElementRef;\n  @ViewChild('tableBodyElement', { read: ElementRef }) tableBodyElement!: ElementRef;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport })\n  cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  headerStyleMap = {};\n  bodyStyleMap = {};\n  @Input() verticalScrollBarWidth = 0;\n  noDateVirtualHeight = '182px';\n  private data$ = new Subject<void>();\n  private scroll$ = new Subject<void>();\n  private destroy$ = new Subject<void>();\n\n  setScrollPositionClassName(clear: boolean = false): void {\n    const { scrollWidth, scrollLeft, clientWidth } = this.tableBodyElement.nativeElement;\n    const leftClassName = 'ant-table-ping-left';\n    const rightClassName = 'ant-table-ping-right';\n    if ((scrollWidth === clientWidth && scrollWidth !== 0) || clear) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n    } else if (scrollLeft === 0) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    } else if (scrollWidth === scrollLeft + clientWidth) {\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n    } else {\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private ngZone: NgZone, private platform: Platform, private resizeService: NzResizeService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { scrollX, scrollY, data } = changes;\n    if (scrollX || scrollY) {\n      const hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n      this.headerStyleMap = {\n        overflowX: 'hidden',\n        overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n      };\n      this.bodyStyleMap = {\n        overflowY: this.scrollY ? 'scroll' : 'hidden',\n        overflowX: this.scrollX ? 'auto' : null,\n        maxHeight: this.scrollY\n      };\n      this.scroll$.next();\n    }\n    if (data) {\n      this.data$.next();\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        const scrollEvent$ = this.scroll$.pipe(\n          startWith(null),\n          delay(0),\n          switchMap(() => fromEvent<MouseEvent>(this.tableBodyElement.nativeElement, 'scroll').pipe(startWith(true))),\n          takeUntil(this.destroy$)\n        );\n        const resize$ = this.resizeService.subscribe().pipe(takeUntil(this.destroy$));\n        const data$ = this.data$.pipe(takeUntil(this.destroy$));\n        const setClassName$ = merge(scrollEvent$, resize$, data$, this.scroll$).pipe(startWith(true), delay(0), takeUntil(this.destroy$));\n        setClassName$.subscribe(() => this.setScrollPositionClassName());\n        scrollEvent$\n          .pipe(filter(() => !!this.scrollY))\n          .subscribe(() => (this.tableHeaderElement.nativeElement.scrollLeft = this.tableBodyElement.nativeElement.scrollLeft));\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.setScrollPositionClassName(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: '[nz-virtual-scroll]',\n  exportAs: 'nzVirtualScroll'\n})\nexport class NzTableVirtualScrollDirective {\n  constructor(public templateRef: TemplateRef<{ $implicit: NzSafeAny; index: number }>) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, skip, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzTableData, NzTableFilterFn, NzTableFilterValue, NzTableQueryParams, NzTableSortFn, NzTableSortOrder } from './table.types';\n\n@Injectable()\nexport class NzTableDataService implements OnDestroy {\n  private destroy$ = new Subject();\n  private pageIndex$ = new BehaviorSubject<number>(1);\n  private frontPagination$ = new BehaviorSubject<boolean>(true);\n  private pageSize$ = new BehaviorSubject<number>(10);\n  private listOfData$ = new BehaviorSubject<NzTableData[]>([]);\n  pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n  pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n  listOfCalcOperator$ = new BehaviorSubject<\n    Array<{\n      key?: string;\n      sortFn: NzTableSortFn | null | boolean;\n      sortOrder: NzTableSortOrder;\n      filterFn: NzTableFilterFn | null | boolean;\n      filterValue: NzTableFilterValue;\n      sortPriority: number | boolean;\n    }>\n  >([]);\n  queryParams$: Observable<NzTableQueryParams> = combineLatest([\n    this.pageIndexDistinct$,\n    this.pageSizeDistinct$,\n    this.listOfCalcOperator$\n  ]).pipe(\n    debounceTime(0),\n    skip(1),\n    map(([pageIndex, pageSize, listOfCalc]) => {\n      return {\n        pageIndex,\n        pageSize,\n        sort: listOfCalc\n          .filter(item => item.sortFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.sortOrder\n            };\n          }),\n        filter: listOfCalc\n          .filter(item => item.filterFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.filterValue\n            };\n          })\n      };\n    })\n  );\n  private listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(\n    map(([listOfData, listOfCalcOperator]) => {\n      let listOfDataAfterCalc = [...listOfData];\n      const listOfFilterOperator = listOfCalcOperator.filter(item => {\n        const { filterValue, filterFn } = item;\n        const isReset = filterValue === null || filterValue === undefined || (Array.isArray(filterValue) && filterValue!.length === 0);\n        return !isReset && typeof filterFn === 'function';\n      });\n      for (const item of listOfFilterOperator) {\n        const { filterFn, filterValue } = item;\n        listOfDataAfterCalc = listOfDataAfterCalc.filter(data => (filterFn as NzTableFilterFn)(filterValue, data));\n      }\n      const listOfSortOperator = listOfCalcOperator\n        .filter(item => item.sortOrder !== null && typeof item.sortFn === 'function')\n        .sort((a, b) => +b.sortPriority - +a.sortPriority);\n      if (listOfCalcOperator.length) {\n        listOfDataAfterCalc.sort((record1, record2) => {\n          for (const item of listOfSortOperator) {\n            const { sortFn, sortOrder } = item;\n            if (sortFn && sortOrder) {\n              const compareResult = (sortFn as NzTableSortFn)(record1, record2, sortOrder);\n              if (compareResult !== 0) {\n                return sortOrder === 'ascend' ? compareResult : -compareResult;\n              }\n            }\n          }\n          return 0;\n        });\n      }\n      return listOfDataAfterCalc;\n    })\n  );\n  private listOfFrontEndCurrentPageData$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfDataAfterCalc$]).pipe(\n    takeUntil(this.destroy$),\n    filter(value => {\n      const [pageIndex, pageSize, listOfData] = value;\n      const maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n      return pageIndex <= maxPageIndex;\n    }),\n    map(([pageIndex, pageSize, listOfData]) => {\n      return listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n    })\n  );\n  listOfCurrentPageData$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfFrontEndCurrentPageData$ : this.listOfData$))\n  );\n  total$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfDataAfterCalc$ : this.listOfData$)),\n    map(list => list.length),\n    distinctUntilChanged()\n  );\n\n  updatePageSize(size: number): void {\n    this.pageSize$.next(size);\n  }\n  updateFrontPagination(pagination: boolean): void {\n    this.frontPagination$.next(pagination);\n  }\n  updatePageIndex(index: number): void {\n    this.pageIndex$.next(index);\n  }\n  updateListOfData(list: NzTableData[]): void {\n    this.listOfData$.next(list);\n  }\n  constructor() {}\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport { PaginationItemRenderContext } from 'ng-zorro-antd/pagination';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTableData, NzTableLayout, NzTablePaginationPosition, NzTableQueryParams, NzTableSize } from '../table.types';\nimport { NzTableInnerScrollComponent } from './table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table-virtual-scroll.directive';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'table';\n\n@Component({\n  selector: 'nz-table',\n  exportAs: 'nzTable',\n  providers: [NzTableStyleService, NzTableDataService],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-spin [nzDelay]=\"nzLoadingDelay\" [nzSpinning]=\"nzLoading\" [nzIndicator]=\"nzLoadingIndicator\">\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n      <div\n        #tableMainElement\n        class=\"ant-table\"\n        [class.ant-table-fixed-header]=\"nzData.length && scrollY\"\n        [class.ant-table-fixed-column]=\"scrollX\"\n        [class.ant-table-has-fix-left]=\"hasFixLeft\"\n        [class.ant-table-has-fix-right]=\"hasFixRight\"\n        [class.ant-table-bordered]=\"nzBordered\"\n        [class.nz-table-out-bordered]=\"nzOuterBordered && !nzBordered\"\n        [class.ant-table-middle]=\"nzSize === 'middle'\"\n        [class.ant-table-small]=\"nzSize === 'small'\"\n      >\n        <nz-table-title-footer [title]=\"nzTitle\" *ngIf=\"nzTitle\"></nz-table-title-footer>\n        <nz-table-inner-scroll\n          *ngIf=\"scrollY || scrollX; else defaultTemplate\"\n          [data]=\"data\"\n          [scrollX]=\"scrollX\"\n          [scrollY]=\"scrollY\"\n          [contentTemplate]=\"contentTemplate\"\n          [listOfColWidth]=\"listOfAutoColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [verticalScrollBarWidth]=\"verticalScrollBarWidth\"\n          [virtualTemplate]=\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\"\n          [virtualItemSize]=\"nzVirtualItemSize\"\n          [virtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [virtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [tableMainElement]=\"tableMainElement\"\n          [virtualForTrackBy]=\"nzVirtualForTrackBy\"\n        ></nz-table-inner-scroll>\n        <ng-template #defaultTemplate>\n          <nz-table-inner-default\n            [tableLayout]=\"nzTableLayout\"\n            [listOfColWidth]=\"listOfManualColWidth\"\n            [theadTemplate]=\"theadTemplate\"\n            [contentTemplate]=\"contentTemplate\"\n          ></nz-table-inner-default>\n        </ng-template>\n        <nz-table-title-footer [footer]=\"nzFooter\" *ngIf=\"nzFooter\"></nz-table-title-footer>\n      </div>\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n    </nz-spin>\n    <ng-template #paginationTemplate>\n      <nz-pagination\n        *ngIf=\"nzShowPagination && data.length\"\n        class=\"ant-table-pagination ant-table-pagination-right\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n        [nzPageSizeOptions]=\"nzPageSizeOptions\"\n        [nzItemRender]=\"nzItemRender!\"\n        [nzShowQuickJumper]=\"nzShowQuickJumper\"\n        [nzHideOnSinglePage]=\"nzHideOnSinglePage\"\n        [nzShowTotal]=\"nzShowTotal\"\n        [nzSize]=\"nzSize === 'default' ? 'default' : 'small'\"\n        [nzPageSize]=\"nzPageSize\"\n        [nzTotal]=\"nzTotal\"\n        [nzSimple]=\"nzSimple\"\n        [nzPageIndex]=\"nzPageIndex\"\n        (nzPageSizeChange)=\"onPageSizeChange($event)\"\n        (nzPageIndexChange)=\"onPageIndexChange($event)\"\n      ></nz-pagination>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-table-wrapper]': 'true'\n  }\n})\nexport class NzTableComponent<T = NzSafeAny> implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzFrontPagination: BooleanInput;\n  static ngAcceptInputType_nzTemplateMode: BooleanInput;\n  static ngAcceptInputType_nzShowPagination: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzOuterBordered: BooleanInput;\n  static ngAcceptInputType_nzShowSizeChanger: BooleanInput;\n  static ngAcceptInputType_nzHideOnSinglePage: BooleanInput;\n  static ngAcceptInputType_nzShowQuickJumper: BooleanInput;\n  static ngAcceptInputType_nzSimple: BooleanInput;\n\n  @Input() nzTableLayout: NzTableLayout = 'auto';\n  @Input() nzShowTotal: TemplateRef<{ $implicit: number; range: [number, number] }> | null = null;\n  @Input() nzItemRender: TemplateRef<PaginationItemRenderContext> | null = null;\n  @Input() nzTitle: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzFooter: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzNoResult: string | TemplateRef<NzSafeAny> | undefined = undefined;\n  @Input() nzPageSizeOptions = [10, 20, 30, 40, 50];\n  @Input() nzVirtualItemSize = 0;\n  @Input() nzVirtualMaxBufferPx = 200;\n  @Input() nzVirtualMinBufferPx = 100;\n  @Input() nzVirtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @Input() nzLoadingDelay = 0;\n  @Input() nzPageIndex = 1;\n  @Input() nzPageSize = 10;\n  @Input() nzTotal = 0;\n  @Input() nzWidthConfig: Array<string | null> = [];\n  @Input() nzData: T[] = [];\n  @Input() nzPaginationPosition: NzTablePaginationPosition = 'bottom';\n  @Input() nzScroll: { x?: string | null; y?: string | null } = { x: null, y: null };\n  @Input() @InputBoolean() nzFrontPagination = true;\n  @Input() @InputBoolean() nzTemplateMode = false;\n  @Input() @InputBoolean() nzShowPagination = true;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzOuterBordered = false;\n  @Input() @WithConfig() nzLoadingIndicator: TemplateRef<NzSafeAny> | null = null;\n  @Input() @WithConfig() @InputBoolean() nzBordered: boolean = false;\n  @Input() @WithConfig() nzSize: NzTableSize = 'default';\n  @Input() @WithConfig() @InputBoolean() nzShowSizeChanger: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzHideOnSinglePage: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzShowQuickJumper: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzSimple: boolean = false;\n  @Output() readonly nzPageSizeChange = new EventEmitter<number>();\n  @Output() readonly nzPageIndexChange = new EventEmitter<number>();\n  @Output() readonly nzQueryParams = new EventEmitter<NzTableQueryParams>();\n  @Output() readonly nzCurrentPageDataChange = new EventEmitter<NzTableData[]>();\n\n  /** public data for ngFor tr */\n  public data: T[] = [];\n  public cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  scrollX: string | null = null;\n  scrollY: string | null = null;\n  theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  listOfAutoColWidth: Array<string | null> = [];\n  listOfManualColWidth: Array<string | null> = [];\n  hasFixLeft = false;\n  hasFixRight = false;\n  private destroy$ = new Subject<void>();\n  private loading$ = new BehaviorSubject<boolean>(false);\n  private templateMode$ = new BehaviorSubject<boolean>(false);\n  @ContentChild(NzTableVirtualScrollDirective, { static: false })\n  nzVirtualScrollDirective!: NzTableVirtualScrollDirective;\n  @ViewChild(NzTableInnerScrollComponent) nzTableInnerScrollComponent!: NzTableInnerScrollComponent;\n  verticalScrollBarWidth = 0;\n  onPageSizeChange(size: number): void {\n    this.nzTableDataService.updatePageSize(size);\n  }\n\n  onPageIndexChange(index: number): void {\n    this.nzTableDataService.updatePageIndex(index);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private nzResizeObserver: NzResizeObserver,\n    private nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private nzTableStyleService: NzTableStyleService,\n    private nzTableDataService: NzTableDataService\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    const { pageIndexDistinct$, pageSizeDistinct$, listOfCurrentPageData$, total$, queryParams$ } = this.nzTableDataService;\n    const { theadTemplate$, hasFixLeft$, hasFixRight$ } = this.nzTableStyleService;\n    queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n    pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageIndex => {\n      if (pageIndex !== this.nzPageIndex) {\n        this.nzPageIndex = pageIndex;\n        this.nzPageIndexChange.next(pageIndex);\n      }\n    });\n    pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageSize => {\n      if (pageSize !== this.nzPageSize) {\n        this.nzPageSize = pageSize;\n        this.nzPageSizeChange.next(pageSize);\n      }\n    });\n    total$\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(() => this.nzFrontPagination)\n      )\n      .subscribe(total => {\n        if (total !== this.nzTotal) {\n          this.nzTotal = total;\n          this.cdr.markForCheck();\n        }\n      });\n    listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.data = data;\n      this.nzCurrentPageDataChange.next(data);\n      this.cdr.markForCheck();\n    });\n\n    theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(theadTemplate => {\n      this.theadTemplate = theadTemplate;\n      this.cdr.markForCheck();\n    });\n\n    hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(hasFixLeft => {\n      this.hasFixLeft = hasFixLeft;\n      this.cdr.markForCheck();\n    });\n\n    hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(hasFixRight => {\n      this.hasFixRight = hasFixRight;\n      this.cdr.markForCheck();\n    });\n\n    combineLatest([total$, this.loading$, this.templateMode$])\n      .pipe(\n        map(([total, loading, templateMode]) => total === 0 && !loading && !templateMode),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(empty => {\n        this.nzTableStyleService.setShowEmpty(empty);\n      });\n\n    this.verticalScrollBarWidth = measureScrollbar('vertical');\n    this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfAutoColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n    this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfManualColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzScroll, nzPageIndex, nzPageSize, nzFrontPagination, nzData, nzWidthConfig, nzNoResult, nzLoading, nzTemplateMode } = changes;\n    if (nzPageIndex) {\n      this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n    }\n    if (nzPageSize) {\n      this.nzTableDataService.updatePageSize(this.nzPageSize);\n    }\n    if (nzData) {\n      this.nzData = this.nzData || [];\n      this.nzTableDataService.updateListOfData(this.nzData);\n    }\n    if (nzFrontPagination) {\n      this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n    }\n    if (nzScroll) {\n      this.scrollX = (this.nzScroll && this.nzScroll.x) || null;\n      this.scrollY = (this.nzScroll && this.nzScroll.y) || null;\n      this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n    }\n    if (nzWidthConfig) {\n      this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n    }\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n    if (nzTemplateMode) {\n      this.templateMode$.next(this.nzTemplateMode);\n    }\n    if (nzNoResult) {\n      this.nzTableStyleService.setNoResult(this.nzNoResult);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.nzResizeObserver\n      .observe(this.elementRef)\n      .pipe(\n        map(([entry]) => {\n          const { width } = entry.target.getBoundingClientRect();\n          const scrollBarWidth = this.scrollY ? this.verticalScrollBarWidth : 0;\n          return Math.floor(width - scrollBarWidth);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(this.nzTableStyleService.hostWidth$);\n    if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n      this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport { ChangeDetectionStrategy, Component, Optional, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tbody',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"listOfMeasureColumn$ | async as listOfMeasureColumn\">\n      <tr\n        nz-table-measure-row\n        *ngIf=\"isInsideTable && listOfMeasureColumn.length\"\n        [listOfMeasureColumn]=\"listOfMeasureColumn\"\n        (listOfAutoWidth)=\"onListOfAutoWidthChange($event)\"\n      ></tr>\n    </ng-container>\n    <ng-content></ng-content>\n    <tr class=\"ant-table-placeholder\" nz-table-fixed-row *ngIf=\"showEmpty$ | async\">\n      <nz-embed-empty nzComponentName=\"table\" [specificContent]=\"(noResult$ | async)!\"></nz-embed-empty>\n    </tr>\n  `,\n  host: {\n    '[class.ant-table-tbody]': 'isInsideTable'\n  }\n})\nexport class NzTbodyComponent {\n  isInsideTable = false;\n  showEmpty$ = new BehaviorSubject<boolean>(false);\n  noResult$ = new BehaviorSubject<string | TemplateRef<NzSafeAny> | undefined>(undefined);\n  listOfMeasureColumn$ = new BehaviorSubject<string[]>([]);\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!this.nzTableStyleService;\n    if (this.nzTableStyleService) {\n      const { showEmpty$, noResult$, listOfMeasureColumn$ } = this.nzTableStyleService;\n      noResult$.subscribe(this.noResult$);\n      listOfMeasureColumn$.subscribe(this.listOfMeasureColumn$);\n      showEmpty$.subscribe(this.showEmpty$);\n    }\n  }\n\n  onListOfAutoWidthChange(listOfAutoWidth: number[]): void {\n    this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { combineLatest, merge, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { flatMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzCellFixedDirective } from '../cell/cell-fixed.directive';\nimport { NzThMeasureDirective } from '../cell/th-measure.directive';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])',\n  host: {\n    '[class.ant-table-row]': 'isInsideTable'\n  }\n})\nexport class NzTrDirective implements AfterContentInit, OnDestroy {\n  @ContentChildren(NzThMeasureDirective) listOfNzThDirective!: QueryList<NzThMeasureDirective>;\n  @ContentChildren(NzCellFixedDirective) listOfCellFixedDirective!: QueryList<NzCellFixedDirective>;\n  private destroy$ = new Subject<void>();\n  private listOfFixedColumns$ = new ReplaySubject<NzCellFixedDirective[]>(1);\n  private listOfColumns$ = new ReplaySubject<NzThMeasureDirective[]>(1);\n  listOfFixedColumnsChanges$: Observable<NzCellFixedDirective[]> = this.listOfFixedColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfFixedColumns$, ...list.map((c: NzCellFixedDirective) => c.changes$)]).pipe(\n        flatMap(() => this.listOfFixedColumns$)\n      )\n    ),\n    takeUntil(this.destroy$)\n  );\n  listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzLeft !== false)));\n  listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzRight !== false)));\n  listOfColumnsChanges$: Observable<NzThMeasureDirective[]> = this.listOfColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfColumns$, ...list.map((c: NzThMeasureDirective) => c.changes$)]).pipe(flatMap(() => this.listOfColumns$))\n    ),\n    takeUntil(this.destroy$)\n  );\n  isInsideTable = false;\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      this.listOfCellFixedDirective.changes\n        .pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$))\n        .subscribe(this.listOfFixedColumns$);\n      this.listOfNzThDirective.changes.pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$)).subscribe(this.listOfColumns$);\n      /** set last left and first right **/\n      this.listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeft => {\n        listOfFixedLeft.forEach(cell => cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]));\n      });\n      this.listOfFixedRightColumnChanges$.subscribe(listOfFixedRight => {\n        listOfFixedRight.forEach(cell => cell.setIsFirstRight(cell === listOfFixedRight[0]));\n      });\n      /** calculate fixed nzLeft and nzRight **/\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfLeftCell]) => {\n          listOfLeftCell.forEach((cell, index) => {\n            if (cell.isAutoLeft) {\n              const currentArray = listOfLeftCell.slice(0, index);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth.slice(0, count).reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoLeftWidth(`${width}px`);\n            }\n          });\n        }\n      );\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfRightCell]) => {\n          listOfRightCell.forEach((_, index) => {\n            const cell = listOfRightCell[listOfRightCell.length - index - 1];\n            if (cell.isAutoRight) {\n              const currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth\n                .slice(listOfAutoWidth.length - count, listOfAutoWidth.length)\n                .reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoRightWidth(`${width}px`);\n            }\n          });\n        }\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport { delay, map, mergeMap, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzThAddOnComponent } from '../cell/th-addon.component';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTrDirective } from './tr.directive';\n\n@Component({\n  selector: 'thead:not(.ant-table-thead)',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n    <ng-container *ngIf=\"!isInsideTable\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </ng-container>\n  `\n})\nexport class NzTheadComponent implements AfterContentInit, OnDestroy, AfterViewInit, OnInit {\n  private destroy$ = new Subject<void>();\n  isInsideTable = false;\n  @ViewChild('contentTemplate', { static: true }) templateRef!: TemplateRef<NzSafeAny>;\n  @ContentChildren(NzTrDirective, { descendants: true }) listOfNzTrDirective!: QueryList<NzTrDirective>;\n  @ContentChildren(NzThAddOnComponent, { descendants: true }) listOfNzThAddOnComponent!: QueryList<NzThAddOnComponent>;\n  @Output() readonly nzSortOrderChange = new EventEmitter<{ key: NzSafeAny; value: string | null }>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() private nzTableStyleService: NzTableStyleService,\n    @Optional() private nzTableDataService: NzTableDataService\n  ) {\n    this.isInsideTable = !!this.nzTableStyleService;\n  }\n\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      this.nzTableStyleService.setTheadTemplate(this.templateRef);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      const firstTableRow$ = this.listOfNzTrDirective.changes.pipe(\n        startWith(this.listOfNzTrDirective),\n        map(item => item && item.first)\n      ) as Observable<NzTrDirective>;\n      const listOfColumnsChanges$ = firstTableRow$.pipe(\n        switchMap(firstTableRow => (firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfColumnsChanges$.subscribe(data => this.nzTableStyleService.setListOfTh(data));\n      /** TODO: need reset the measure row when scrollX change **/\n      this.nzTableStyleService.enableAutoMeasure$\n        .pipe(switchMap(enable => (enable ? listOfColumnsChanges$ : of([]))))\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.nzTableStyleService.setListOfMeasureColumn(data));\n      const listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      const listOfFixedRightColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeftColumn => {\n        this.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n      });\n      listOfFixedRightColumnChanges$.subscribe(listOfFixedRightColumn => {\n        this.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n      });\n    }\n    if (this.nzTableDataService) {\n      const listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent)) as Observable<\n        QueryList<NzThAddOnComponent>\n      >;\n      const manualSort$ = listOfColumn$.pipe(\n        switchMap(() => merge(...this.listOfNzThAddOnComponent.map(th => th.manualClickOrder$))),\n        takeUntil(this.destroy$)\n      );\n      manualSort$.subscribe((data: NzThAddOnComponent) => {\n        const emitValue = { key: data.nzColumnKey, value: data.sortOrder };\n        this.nzSortOrderChange.emit(emitValue);\n        if (data.nzSortFn && data.nzSortPriority === false) {\n          this.listOfNzThAddOnComponent.filter(th => th !== data).forEach(th => th.clearSortOrder());\n        }\n      });\n      const listOfCalcOperator$ = listOfColumn$.pipe(\n        switchMap(list =>\n          merge(...[listOfColumn$, ...list.map((c: NzThAddOnComponent) => c.calcOperatorChange$)]).pipe(mergeMap(() => listOfColumn$))\n        ),\n        map(list =>\n          list\n            .filter(item => !!item.nzSortFn || !!item.nzFilterFn)\n            .map(item => {\n              const { nzSortFn, sortOrder, nzFilterFn, nzFilterValue, nzSortPriority, nzColumnKey } = item;\n              return {\n                key: nzColumnKey,\n                sortFn: nzSortFn,\n                sortPriority: nzSortPriority,\n                sortOrder: sortOrder!,\n                filterFn: nzFilterFn!,\n                filterValue: nzFilterValue\n              };\n            })\n        ),\n        // TODO: after checked error here\n        delay(0)\n      );\n      listOfCalcOperator$.subscribe(list => {\n        this.nzTableDataService.listOfCalcOperator$.next(list);\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzTableStyleService) {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-title-footer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n    <ng-container *nzStringTemplateOutlet=\"footer\">{{ footer }}</ng-container>\n  `,\n  host: {\n    '[class.ant-table-title]': `title !== null`,\n    '[class.ant-table-footer]': `footer !== null`\n  }\n})\nexport class NzTableTitleFooterComponent {\n  @Input() title: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() footer: string | TemplateRef<NzSafeAny> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'tr[nzExpand]',\n  host: {\n    '[class.ant-table-expanded-row]': 'true',\n    '[hidden]': `!nzExpand`\n  }\n})\nexport class NzTrExpandDirective {\n  @Input() nzExpand = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'tr[nz-table-measure-row]',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td\n      #tdElement\n      class=\"nz-disable-td\"\n      style=\"padding: 0px; border: 0px; height: 0px;\"\n      *ngFor=\"let th of listOfMeasureColumn; trackBy: trackByFunc\"\n    ></td>\n  `,\n  host: {\n    '[class.ant-table-measure-now]': 'true'\n  }\n})\nexport class NzTrMeasureComponent implements AfterViewInit, OnDestroy {\n  @Input() listOfMeasureColumn: string[] = [];\n  @Output() readonly listOfAutoWidth = new EventEmitter<number[]>();\n  @ViewChildren('tdElement') listOfTdElement!: QueryList<ElementRef>;\n  private destroy$ = new Subject();\n  constructor(private nzResizeObserver: NzResizeObserver, private ngZone: NgZone) {}\n  trackByFunc(_: number, key: string): string {\n    return key;\n  }\n  ngAfterViewInit(): void {\n    this.listOfTdElement.changes\n      .pipe(startWith(this.listOfTdElement))\n      .pipe(\n        switchMap(list => {\n          return combineLatest(\n            list.toArray().map((item: ElementRef) => {\n              return this.nzResizeObserver.observe(item).pipe(\n                map(([entry]) => {\n                  const { width } = entry.target.getBoundingClientRect();\n                  return Math.floor(width);\n                })\n              );\n            })\n          ) as Observable<number[]>;\n        }),\n        debounceTime(16),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(data => {\n        this.ngZone.run(() => {\n          this.listOfAutoWidth.next(data);\n        });\n      });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzResizeObserversModule } from 'ng-zorro-antd/core/resize-observers';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzFilterTriggerComponent } from './addon/filter-trigger.component';\nimport { NzTableFilterComponent } from './addon/filter.component';\nimport { NzRowExpandButtonDirective } from './addon/row-expand-button.directive';\nimport { NzRowIndentDirective } from './addon/row-indent.directive';\nimport { NzTableSelectionComponent } from './addon/selection.component';\nimport { NzTableSortersComponent } from './addon/sorters.component';\nimport { NzCellFixedDirective } from './cell/cell-fixed.directive';\nimport { NzTableCellDirective } from './cell/cell.directive';\nimport { NzTdAddOnComponent } from './cell/td-addon.component';\nimport { NzThAddOnComponent } from './cell/th-addon.component';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\nimport { NzThSelectionComponent } from './cell/th-selection.component';\nimport { NzCellAlignDirective } from './styled/align.directive';\nimport { NzCellEllipsisDirective } from './styled/ellipsis.directive';\nimport { NzCellBreakWordDirective } from './styled/word-break.directive';\nimport { NzTableContentComponent } from './table/table-content.component';\nimport { NzTableFixedRowComponent } from './table/table-fixed-row.component';\nimport { NzTableInnerDefaultComponent } from './table/table-inner-default.component';\nimport { NzTableInnerScrollComponent } from './table/table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table/table-virtual-scroll.directive';\nimport { NzTableComponent } from './table/table.component';\nimport { NzTbodyComponent } from './table/tbody.component';\nimport { NzTheadComponent } from './table/thead.component';\nimport { NzTableTitleFooterComponent } from './table/title-footer.component';\nimport { NzTrExpandDirective } from './table/tr-expand.directive';\nimport { NzTrMeasureComponent } from './table/tr-measure.component';\nimport { NzTrDirective } from './table/tr.directive';\n\n@NgModule({\n  declarations: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTrExpandDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzTableContentComponent,\n    NzTableTitleFooterComponent,\n    NzTableInnerDefaultComponent,\n    NzTableInnerScrollComponent,\n    NzTrMeasureComponent,\n    NzRowIndentDirective,\n    NzRowExpandButtonDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzTableSortersComponent,\n    NzTableFilterComponent,\n    NzTableSelectionComponent,\n    NzCellEllipsisDirective,\n    NzFilterTriggerComponent,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  exports: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzFilterTriggerComponent,\n    NzTrExpandDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzCellEllipsisDirective,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  imports: [\n    NzMenuModule,\n    FormsModule,\n    NzOutletModule,\n    NzRadioModule,\n    NzCheckboxModule,\n    NzDropDownModule,\n    NzButtonModule,\n    CommonModule,\n    PlatformModule,\n    NzPaginationModule,\n    NzResizeObserversModule,\n    NzSpinModule,\n    NzI18nModule,\n    NzIconModule,\n    NzEmptyModule,\n    ScrollingModule\n  ]\n})\nexport class NzTableModule {}\n"]}