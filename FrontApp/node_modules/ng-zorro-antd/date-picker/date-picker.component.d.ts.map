{"version":3,"file":"date-picker.component.d.ts","sources":["date-picker.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { CompatibleValue } from 'ng-zorro-antd/core/time';\nimport { BooleanInput, FunctionProp, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { DateHelperService, NzDatePickerI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\nimport { DatePickerService } from './date-picker.service';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzPickerComponent } from './picker.component';\nimport { CompatibleDate, DisabledTimeFn, NzDateMode, PresetRanges, SupportTimeOptions } from './standard-types';\nexport declare type NzDatePickerSizeType = 'large' | 'default' | 'small';\n/**\n * The base picker for all common APIs\n */\nexport declare class NzDatePickerComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n    nzConfigService: NzConfigService;\n    datePickerService: DatePickerService;\n    protected i18n: NzI18nService;\n    protected cdr: ChangeDetectorRef;\n    private renderer;\n    private elementRef;\n    protected dateHelper: DateHelperService;\n    noAnimation?: NzNoAnimationDirective | undefined;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    static ngAcceptInputType_nzBorderless: BooleanInput;\n    static ngAcceptInputType_nzInputReadOnly: BooleanInput;\n    static ngAcceptInputType_nzOpen: BooleanInput;\n    static ngAcceptInputType_nzShowToday: BooleanInput;\n    static ngAcceptInputType_nzMode: NzDateMode | NzDateMode[] | string | string[] | null | undefined;\n    static ngAcceptInputType_nzShowTime: BooleanInput | SupportTimeOptions | null | undefined;\n    isRange: boolean;\n    focused: boolean;\n    extraFooter?: TemplateRef<NzSafeAny> | string;\n    panelMode: NzDateMode | NzDateMode[];\n    private destroyed$;\n    private isCustomPlaceHolder;\n    private showTime;\n    nzAllowClear: boolean;\n    nzAutoFocus: boolean;\n    nzDisabled: boolean;\n    nzBorderless: boolean;\n    nzInputReadOnly: boolean;\n    /**\n     * @deprecated use method `open` or `close` instead.\n     * @breaking-change 11.0.0\n     */\n    nzOpen?: boolean;\n    nzDisabledDate?: (d: Date) => boolean;\n    nzLocale: NzDatePickerI18nInterface;\n    nzPlaceHolder: string | string[];\n    nzPopupStyle: object;\n    nzDropdownClassName?: string;\n    nzSize: NzDatePickerSizeType;\n    nzFormat: string;\n    nzDateRender?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<Date> | string>;\n    nzDisabledTime?: DisabledTimeFn;\n    nzRenderExtraFooter?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<NzSafeAny> | string>;\n    nzShowToday: boolean;\n    nzMode: NzDateMode | NzDateMode[];\n    nzRanges?: PresetRanges;\n    nzDefaultPickerValue: CompatibleDate | null;\n    nzSeparator?: string;\n    nzSuffixIcon: string | TemplateRef<NzSafeAny>;\n    readonly nzOnPanelChange: EventEmitter<string | NzDateMode[] | string[]>;\n    readonly nzOnCalendarChange: EventEmitter<(Date | null)[]>;\n    readonly nzOnOk: EventEmitter<Date | Date[] | null>;\n    readonly nzOnOpenChange: EventEmitter<boolean>;\n    picker: NzPickerComponent;\n    get nzShowTime(): SupportTimeOptions | boolean;\n    set nzShowTime(value: SupportTimeOptions | boolean);\n    constructor(nzConfigService: NzConfigService, datePickerService: DatePickerService, i18n: NzI18nService, cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef, dateHelper: DateHelperService, noAnimation?: NzNoAnimationDirective | undefined);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    setModeAndFormat(): void;\n    /**\n     * Triggered when overlayOpen changes (different with realOpenState)\n     * @param open The overlayOpen in picker component\n     */\n    onOpenChange(open: boolean): void;\n    open(): void;\n    close(): void;\n    onChangeFn: OnChangeType;\n    onTouchedFn: OnTouchedType;\n    writeValue(value: CompatibleDate): void;\n    registerOnChange(fn: OnChangeType): void;\n    registerOnTouched(fn: OnTouchedType): void;\n    setDisabledState(isDisabled: boolean): void;\n    private setLocale;\n    private setDefaultPlaceHolder;\n    private getPropertyOfLocale;\n    private setValue;\n    onFocusChange(value: boolean): void;\n    onPanelModeChange(panelMode: NzDateMode | NzDateMode[]): void;\n    onCalendarChange(value: CompatibleValue): void;\n    onResultOk(): void;\n}\n"]}