{"version":3,"file":"picker.component.d.ts","sources":["picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair, HorizontalConnectionPos, VerticalConnectionPos } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { CandyDate, CompatibleValue } from 'ng-zorro-antd/core/time';\nimport { NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DateHelperService } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { DatePickerService } from './date-picker.service';\nimport { DateRangePopupComponent } from './date-range-popup.component';\nimport { RangePartType } from './standard-types';\nexport declare class NzPickerComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n    private elementRef;\n    private dateHelper;\n    private cdr;\n    private platform;\n    private nzResizeObserver;\n    datePickerService: DatePickerService;\n    noAnimation: boolean;\n    isRange: boolean;\n    open: boolean | undefined;\n    disabled: boolean;\n    inputReadOnly: boolean;\n    placeholder: string | string[];\n    allowClear?: boolean;\n    autoFocus?: boolean;\n    format: string;\n    separator?: string;\n    popupStyle: NgStyleInterface | null;\n    dropdownClassName?: string;\n    suffixIcon?: string | TemplateRef<NzSafeAny>;\n    readonly focusChange: EventEmitter<boolean>;\n    readonly valueChange: EventEmitter<CandyDate | CandyDate[] | null>;\n    readonly openChange: EventEmitter<boolean>;\n    cdkConnectedOverlay?: CdkConnectedOverlay;\n    separatorElement?: ElementRef;\n    pickerInput?: ElementRef<HTMLInputElement>;\n    rangePickerInputs?: QueryList<ElementRef<HTMLInputElement>>;\n    panel: DateRangePopupComponent;\n    origin: CdkOverlayOrigin;\n    document: Document;\n    inputSize: number;\n    inputWidth?: number;\n    destroy$: Subject<unknown>;\n    prefixCls: string;\n    inputValue: NzSafeAny;\n    overlayOpen: boolean;\n    overlayPositions: ConnectionPositionPair[];\n    currentPositionX: HorizontalConnectionPos;\n    currentPositionY: VerticalConnectionPos;\n    get realOpenState(): boolean;\n    constructor(elementRef: ElementRef, dateHelper: DateHelperService, cdr: ChangeDetectorRef, platform: Platform, nzResizeObserver: NzResizeObserver, datePickerService: DatePickerService, doc: NzSafeAny);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    updateInputWidthAndArrowLeft(): void;\n    getInput(partType?: RangePartType): HTMLInputElement | undefined;\n    focus(): void;\n    onFocus(event: FocusEvent, partType?: RangePartType): void;\n    onBlur(event: FocusEvent): void;\n    showOverlay(): void;\n    hideOverlay(): void;\n    showClear(): boolean;\n    onClickInputBox(event: MouseEvent): void;\n    onClickOutside(event: MouseEvent): void;\n    onOverlayDetach(): void;\n    onOverlayKeydown(event: KeyboardEvent): void;\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\n    onClickClear(event: MouseEvent): void;\n    updateInputValue(): void;\n    formatValue(value: CandyDate): string;\n    onInputChange(value: string, isEnter?: boolean): void;\n    onKeyupEnter(event: Event): void;\n    private checkValidDate;\n    getPlaceholder(partType?: RangePartType): string;\n    isEmptyValue(value: CompatibleValue): boolean;\n    isOpenHandledByUser(): boolean;\n}\n"]}